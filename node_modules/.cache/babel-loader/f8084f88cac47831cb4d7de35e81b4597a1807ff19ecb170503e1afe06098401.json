{"ast":null,"code":"var _jsxFileName = \"/Users/hongdonghwa/Desktop/donghwa/simplediary/src/lifecycle.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnmountTest = () => {\n  _s();\n  useEffect(() => {\n    console.log(\"mount!\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Unmount Testing Component\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_s(UnmountTest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = UnmountTest;\nconst Lifecycle = () => {\n  _s2();\n  // const [count, setCount] = useState(0)\n  // const [text, setText] = useState(\"\")\n\n  // useEffect(()=>{\n  //     console.log(\"mount!\")\n  // }, [])\n\n  // useEffect(()=>{\n  //     console.log(\"Update!\") // state를 변경시키는 순간 (dependency를 전달하지 않으면 됨)\n  // })\n\n  // useEffect(()=>{\n  //     console.log(`count is update : ${count}`)\n  //     if(count > 5) {\n  //         alert(\"count가 5를 넘었습니다. 따라서 1로 초기화합니다.\")\n  //         setCount(1)\n  //     }\n  // }, [count]) // count state가 변화하는 순간 호출\n\n  // useEffect(()=>{\n  //     console.log(`text is update : ${text}`)\n  // }, [text]) // count state가 변화하는 순간 호출\n\n  const [isVisible, setIsVisible] = useState(false);\n  const toggle = () => setIsVisible(!isVisible);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"ON / OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(UnmountTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s2(Lifecycle, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c2 = Lifecycle;\nexport default Lifecycle;\nvar _c, _c2;\n$RefreshReg$(_c, \"UnmountTest\");\n$RefreshReg$(_c2, \"Lifecycle\");","map":{"version":3,"names":["React","useEffect","useState","UnmountTest","console","log","Lifecycle","isVisible","setIsVisible","toggle","padding"],"sources":["/Users/hongdonghwa/Desktop/donghwa/simplediary/src/lifecycle.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst UnmountTest = () => {\n\n    useEffect (() => {\n        console.log(\"mount!\")\n    }, [])\n\n    return <div>Unmount Testing Component</div>\n}\n\nconst Lifecycle = () => {\n\n    // const [count, setCount] = useState(0)\n    // const [text, setText] = useState(\"\")\n\n    // useEffect(()=>{\n    //     console.log(\"mount!\")\n    // }, [])\n\n    // useEffect(()=>{\n    //     console.log(\"Update!\") // state를 변경시키는 순간 (dependency를 전달하지 않으면 됨)\n    // })\n\n    // useEffect(()=>{\n    //     console.log(`count is update : ${count}`)\n    //     if(count > 5) {\n    //         alert(\"count가 5를 넘었습니다. 따라서 1로 초기화합니다.\")\n    //         setCount(1)\n    //     }\n    // }, [count]) // count state가 변화하는 순간 호출\n\n    // useEffect(()=>{\n    //     console.log(`text is update : ${text}`)\n    // }, [text]) // count state가 변화하는 순간 호출\n\n    const [isVisible, setIsVisible] = useState(false)\n    const toggle = () => setIsVisible(!isVisible)\n\n    \n\n    return (\n        <div style={{ padding: 20 }}>\n            {/* <div>\n                {count}\n                <button onClick={()=>setCount(count+1)}>+</button>\n            </div>\n            <div>\n                <input value={text} onChange={(e)=> setText(e.target.value)} />\n            </div> */}\n            <button onClick={toggle}>ON / OFF</button>\n            {isVisible && <UnmountTest/>} {/* isVisible이 true 이면 UnmountTest이 렌더링 */}\n        </div>\n    )\n}\n\n\nexport default Lifecycle   "],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAEjD,MAAMC,WAAW,GAAG,MAAM;EAAA;EAEtBF,SAAS,CAAE,MAAM;IACbG,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoC;AAC/C,CAAC;AAAA,GAPKF,WAAW;AAAA,KAAXA,WAAW;AASjB,MAAMG,SAAS,GAAG,MAAM;EAAA;EAEpB;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,MAAM,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAS,CAAC;EAI7C,oBACI;IAAK,KAAK,EAAE;MAAEG,OAAO,EAAE;IAAG,CAAE;IAAA,wBAQxB;MAAQ,OAAO,EAAED,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EACzCF,SAAS,iBAAI,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEd,CAAC;AAAA,IA3CKD,SAAS;AAAA,MAATA,SAAS;AA8Cf,eAAeA,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}