{"ast":null,"code":"var _jsxFileName = \"/Users/hongdonghwa/Desktop/donghwa/simplediary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textview = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  useEffect(() => {\n    console.log(`Updata :: Text : ${text}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Textview;\nconst CountView = /*#__PURE__*/_s2( /*#__PURE__*/React.memo(_c3 = _s2(_ref2 => {\n  _s2();\n  let {\n    count\n  } = _ref2;\n  useEffect(() => {\n    console.log(`Updata :: Count : ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c4 = CountView;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CountView, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Textview, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_s3(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c5 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Textview$React.memo\");\n$RefreshReg$(_c2, \"Textview\");\n$RefreshReg$(_c3, \"CountView$React.memo\");\n$RefreshReg$(_c4, \"CountView\");\n$RefreshReg$(_c5, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","Textview","memo","text","console","log","CountView","count","OptimizeTest","setCount","setText","padding","e","target","value"],"sources":["/Users/hongdonghwa/Desktop/donghwa/simplediary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nconst Textview = React.memo(({text}) => {\n    useEffect(()=>{\n        console.log(`Updata :: Text : ${text}`)\n    })\n    return <div>{text}</div>\n})\n\nconst CountView = React.memo(({count}) => {\n    useEffect(()=>{\n        console.log(`Updata :: Count : ${count}`)\n    })\n    return <div>{count}</div>\n})\n\n\nconst OptimizeTest = () => {\n\n    \n    const [count, setCount] = useState(1)\n    const [text, setText] = useState(\"\")\n    \n    return <div style={{padding: 50}}>\n        <div>\n            <h2>count</h2>\n            <CountView count={count}/>\n            <button onClick={()=>setCount(count+1)}>+</button>\n        </div>\n        <div>\n            <h2>text</h2>\n            <Textview text={text}/>\n            <input value={text} onChange={(e)=>setText(e.target.value)} />\n        </div>\n    </div>\n}\n\nexport default OptimizeTest"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAElD,MAAMC,QAAQ,iCAAGH,KAAK,CAACI,IAAI,SAAC,QAAY;EAAA;EAAA,IAAX;IAACC;EAAI,CAAC;EAC/BJ,SAAS,CAAC,MAAI;IACVK,OAAO,CAACC,GAAG,CAAE,oBAAmBF,IAAK,EAAC,CAAC;EAC3C,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AAC5B,CAAC,kCAAC;AAAA,MALIF,QAAQ;AAOd,MAAMK,SAAS,kCAAGR,KAAK,CAACI,IAAI,WAAC,SAAa;EAAA;EAAA,IAAZ;IAACK;EAAK,CAAC;EACjCR,SAAS,CAAC,MAAI;IACVK,OAAO,CAACC,GAAG,CAAE,qBAAoBE,KAAM,EAAC,CAAC;EAC7C,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAC7B,CAAC,kCAAC;AAAA,MALID,SAAS;AAQf,MAAME,YAAY,GAAG,MAAM;EAAA;EAGvB,MAAM,CAACD,KAAK,EAAEE,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACG,IAAI,EAAEO,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBAAO;IAAK,KAAK,EAAE;MAACW,OAAO,EAAE;IAAE,CAAE;IAAA,wBAC7B;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACd,QAAC,SAAS;QAAC,KAAK,EAAEJ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1B;QAAQ,OAAO,EAAE,MAAIE,QAAQ,CAACF,KAAK,GAAC,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD,eACN;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,QAAQ;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eACvB;QAAO,KAAK,EAAEA,IAAK;QAAC,QAAQ,EAAGS,CAAC,IAAGF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AACV,CAAC;AAAA,IAlBKN,YAAY;AAAA,MAAZA,YAAY;AAoBlB,eAAeA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}