{"ast":null,"code":"var _jsxFileName = \"/Users/hongdonghwa/Desktop/donghwa/simplediary/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n// import Lifecycle from './lifecycle'\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"홍동화\",\n//     content: \"너무 추워요\",\n//     emotion : 5,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 2,\n//     author: \"전예린\",\n//     content: \"그따구로 할거면 접어 xx\",\n//     emotion : 2,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 3,\n//     author: \"김일태\",\n//     content: \"페어가 연락이 안와요.\",\n//     emotion : 1,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 4,\n//     author: \"이희진\",\n//     content: \"축구는 시끄러울 때만 조금씩 봅니다.\",\n//     emotion : 3,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 5,\n//     author: \"이유정\",\n//     content: \"줌 모각코 스터디 좋아여\",\n//     emotion : 5,\n//     created_date: new Date().getTime(),\n//   },\n// ]\n\n// https://jsonplaceholder.typicode.com/comments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  // api 호출\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        // Math.random()*5 : 0~4까지의 수를 랜덤으로 하나 생성(소수점포함) -> floor : 정수반환 -> +1 : 1~5\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setData(initData);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  // 리액트 특성상 데이터는 위에서 아래로 , 이벤트는 아래에서 위로 올라감.\n  // 그래서 수정완료 이벤트를 다이어리아이템에서 앱컴포넌트까지 전달하기 위해서는 \n  // 데이터를 가지고 있는 앱컴포넌트에 수정할 수 있는 기능을 할수 있는 함수를 만들어서,\n  // 다이어리아이템까지 전달해주어야 한다.\n  const onEdit = (targetId, newContent) => {\n    setData(\n    // 원본 데이터 배열에서 , 모든 요소를 순회하며 새로운 배열을 만들어서 셋데이터로\n    // 수정 대상이라면 컨텐츠를 뉴ㅋㄴ텐츠로 교체, 아니라면 현재 원본 값을 지킴.\n    data.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  const getDiaryAnalysis = () => {\n    console.log(\"일기 분석 시작\");\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  };\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2o8Xchl1A9LFe9GiqWSSYkjxPVs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onRemove","targetId","console","log","newDiaryList","filter","onEdit","newContent","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"sources":["/Users/hongdonghwa/Desktop/donghwa/simplediary/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n// import Lifecycle from './lifecycle'\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"홍동화\",\n//     content: \"너무 추워요\",\n//     emotion : 5,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 2,\n//     author: \"전예린\",\n//     content: \"그따구로 할거면 접어 xx\",\n//     emotion : 2,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 3,\n//     author: \"김일태\",\n//     content: \"페어가 연락이 안와요.\",\n//     emotion : 1,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 4,\n//     author: \"이희진\",\n//     content: \"축구는 시끄러울 때만 조금씩 봅니다.\",\n//     emotion : 3,\n//     created_date: new Date().getTime(),\n//   },  \n//   {\n//     id: 5,\n//     author: \"이유정\",\n//     content: \"줌 모각코 스터디 좋아여\",\n//     emotion : 5,\n//     created_date: new Date().getTime(),\n//   },\n// ]\n\n// https://jsonplaceholder.typicode.com/comments\n\n\nfunction App() {\n  const [data, setData] = useState([])\n\n  const dataId = useRef(0)\n\n  // api 호출\n  const getData = async () => { \n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res) => res.json());\n\n    const initData = res.slice(0,20).map((it)=>{ \n      return  {\n        author : it.email,\n        content : it.body,\n        emotion : Math.floor(Math.random()*5) + 1, // Math.random()*5 : 0~4까지의 수를 랜덤으로 하나 생성(소수점포함) -> floor : 정수반환 -> +1 : 1~5\n        created_date : new Date().getTime(),\n        id : dataId.current++ \n      }\n    })\n  \n    setData(initData)\n  }\n\n  useEffect (()=>{\n    getData() \n  },[])\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime()\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n\n  }\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다.`)\n    const newDiaryList = data.filter((it) => it.id !== targetId)\n    setData(newDiaryList)\n  }\n\n  // 리액트 특성상 데이터는 위에서 아래로 , 이벤트는 아래에서 위로 올라감.\n  // 그래서 수정완료 이벤트를 다이어리아이템에서 앱컴포넌트까지 전달하기 위해서는 \n  // 데이터를 가지고 있는 앱컴포넌트에 수정할 수 있는 기능을 할수 있는 함수를 만들어서,\n  // 다이어리아이템까지 전달해주어야 한다.\n  const onEdit = (targetId,newContent) => {\n    setData(\n      // 원본 데이터 배열에서 , 모든 요소를 순회하며 새로운 배열을 만들어서 셋데이터로\n      // 수정 대상이라면 컨텐츠를 뉴ㅋㄴ텐츠로 교체, 아니라면 현재 원본 값을 지킴.\n      data.map((it)=>it.id === targetId ? {...it, content:newContent} : it)\n    )\n  }\n\n  const getDiaryAnalysis = () => {\n    console.log(\"일기 분석 시작\")\n\n    const goodCount = data.filter((it) => it.emotion >= 3).length\n    const badCount = data.length - goodCount\n    const goodRatio = (goodCount / data.length) * 100;\n    return {goodCount, badCount, goodRatio}\n  \n  }\n\n    const {goodCount, badCount, goodRatio} = getDiaryAnalysis\n\n  return (\n    <div className=\"App\">\n      {/* <Lifecycle /> */}\n      <DiaryEditor onCreate={onCreate}/>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}